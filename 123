/**
 * <p>[概 要] 物品費ＣＳＶ作成</p>
 * <p>[詳 細] 物品費CSVデータを作成し、CSVファイルとして返却する</p>
 * @throws SystemException システムエラー発生
 * @throws BusinessException 業務例外発生
 */
public final void buppinCsvSakusei() throws BusinessException, SystemException {
    if (log.isDebugEnabled()) {
        log.debug("buppinCsvSakusei() - start");
    }

    // 通建会社組織定数エンティティ生成
    final N5Buisgiukh02Entity entitySgiUkh = (N5Buisgiukh02Entity) getEntity(N5Buisgiukh02Entity.class);

    // CSVファイル名を生成
    String csvFileName = this.getCenterCode() + "P316030004" + this.getUserID() + DateUtil.getDate("hhmmss") + ".csv";
    String csvFilePath = SystemUtil.getSystemInfo("print.data.path") + csvFileName;

    // 物品費CSVデータを検索
    List listButCsv = entitySgiUkh.search(getRequestData(D_SKS_CD), getRequestData(D_SKJBAN));

    if (listButCsv.size() == 0) {
        throw new BusinessException(new Message("NNCW0007"),
            "UkewatashisyoSakuseiLogic#buppinCsvSakusei()");
    }

    // CSVファイル作成
    FileIoUtil fileIo = new FileIoUtil(csvFilePath, FileIoUtil.WRITE_STRING, FileIoUtil.WINDOWS_31J);
    try {
        StringBuilder sb = new StringBuilder();
        
        // データ行の出力
        for (Object obj : listButCsv) {
            Object[] fields = (Object[]) obj;
            sb.append(formatNumberField(fields[0], 8))     
              .append(",")
              // ... [その他のappend処理は変更なし] ...
              .append("\n");
        }
        fileIo.writeFileString(sb.toString());
        
        // ファイルを下り電文に設定
        try {
            java.io.InputStream is = new java.io.FileInputStream(csvFilePath);
            setDownloadFile(is);
        } catch (java.io.IOException e) {
            throw new SystemException("E-90001", "Failed to create FileInputStream", e);
        }
        
    } finally {
        fileIo.closeFile();
    }

    if (log.isDebugEnabled()) {
        log.debug("buppinCsvSakusei() - end");
    }
}

/**
 * <p>[概 要] 請負費ＣＳＶ作成</p>
 * <p>[詳 細] 請負費CSVデータを作成し、CSVファイルとして返却する</p>
 * @throws SystemException システムエラー発生
 * @throws BusinessException 業務例外発生
 */
public final void ukeoiCsvSakusei() throws BusinessException, SystemException {
    if (log.isDebugEnabled()) {
        log.debug("ukeoiCsvSakusei() - start");
    }

    // 記載工程細分別エンティティ生成
    final N5Skiksksib02Entity entityKskSib = (N5Skiksksib02Entity) getEntity(N5Skiksksib02Entity.class);

    // CSVファイル名を生成
    String csvFileName = this.getCenterCode() + "P316030005" + this.getUserID() + DateUtil.getDate("hhmmss") + ".csv";
    String csvFilePath = SystemUtil.getSystemInfo("print.data.path") + csvFileName;

    // 請負費CSVデータを検索
    List listUoiCsv = entityKskSib.search(getRequestData(D_SKS_CD), getRequestData(D_SKJBAN));

    if (listUoiCsv.size() == 0) {
        throw new BusinessException(new Message("NNCW0007"),
            "UkewatashisyoSakuseiLogic#ukeoiCsvSakusei()");
    }

    // CSVファイル作成
    FileIoUtil fileIo = new FileIoUtil(csvFilePath, FileIoUtil.WRITE_STRING, FileIoUtil.WINDOWS_31J);
    try {
        StringBuilder sb = new StringBuilder();
        
        // データ行の出力
        for (Object obj : listUoiCsv) {
            Object[] fields = (Object[]) obj;
            sb.append(formatNumberField(fields[0], 8))     
              .append(",")
              // ... [その他のappend処理は変更なし] ...
              .append("\n");
        }
        fileIo.writeFileString(sb.toString());
        
        // ファイルを下り電文に設定
        try {
            java.io.InputStream is = new java.io.FileInputStream(csvFilePath);
            setDownloadFile(is);
        } catch (java.io.IOException e) {
            throw new SystemException("E-90001", "Failed to create FileInputStream", e);
        }
        
    } finally {
        fileIo.closeFile();
    }

    if (log.isDebugEnabled()) {
        log.debug("ukeoiCsvSakusei() - end");
    }
}


















-----------------------------------

/**
 * <p>[概 要] 物品費ＣＳＶ作成</p>
 * <p>[詳 細] 物品費CSVデータを作成し、CSVファイルとして返却する</p>
 * @throws SystemException システムエラー発生
 * @throws BusinessException 業務例外発生
 */
public final void buppinCsvSakusei() throws BusinessException, SystemException {
    if (log.isDebugEnabled()) {
        log.debug("buppinCsvSakusei() - start");
    }

    // 通建会社組織定数エンティティ生成
    final N5Buisgiukh02Entity entitySgiUkh = (N5Buisgiukh02Entity) getEntity(N5Buisgiukh02Entity.class);

    // CSVファイル名を生成
    String csvFileName = this.getCenterCode() + "P316030004" + this.getUserID() + DateUtil.getDate("hhmmss") + ".csv";
    String csvFilePath = SystemUtil.getSystemInfo("print.data.path") + csvFileName;

    // 物品費CSVデータを検索
    List listButCsv = entitySgiUkh.search(getRequestData(D_SKS_CD), getRequestData(D_SKJBAN));

    if (listButCsv.size() == 0) {
        throw new BusinessException(new Message("NNCW0007"),
            "UkewatashisyoSakuseiLogic#buppinCsvSakusei()");
    }

    // CSVファイル作成
    FileIoUtil fileIo = new FileIoUtil(csvFilePath, FileIoUtil.WRITE_STRING, FileIoUtil.WINDOWS_31J);
    try {
        StringBuilder sb = new StringBuilder();
        
        // データ行の出力
        for (Object obj : listButCsv) {
            Object[] fields = (Object[]) obj;
            sb.append(formatNumberField(fields[0], 8))     // 総合工事番号: 半角数字8桁
              .append(",")
              .append(formatTextField(fields[1], 23))      // 工事計画番号: 半角文字23桁 
              .append(",")
              .append(formatNumberField(fields[2], 2))     // 増減科目: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[3], 10))    // ビル・収容区域コード: 半角数字10桁
              .append(",")
              .append(formatNumberField(fields[4], 7))     // 共通アイテム: 半角数字7桁
              .append(",")
              .append(formatNumberField(fields[5], 2))     // 管理区分: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[6], 3))     // 設備: 半角数字3桁
              .append(",")
              .append(formatNumberField(fields[7], 2))     // 種目: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[8], 2))     // 細目: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[9], 2))     // 細分: 半角数字2桁
              .append(",")
              .append(formatTextField(fields[10], 50))     // 細分名: 全角文字50桁
              .append(",")
              .append(formatTextField(fields[11], 5))      // 保管課コード: 半角英数字5桁
              .append(",")
              .append(formatTextField(fields[12], 7))      // 開始年月: 半角文字7桁
              .append(",")
              .append(formatNumberField(fields[13], 12))   // 受渡数量: 半角数字12桁
              .append(",")
              .append(formatNumberField(fields[14], 1))    // 工程種別コード: 半角数字1桁
              .append(",")
              .append(formatNumberField(fields[15], 6))    // 記載工程コード: 半角数字6桁
              .append(",")
              .append(formatTextField(fields[16], 8))      // 記載工程名: 全角文字8桁
              .append(",")
              .append(formatTextField(fields[17], 5))      // 単位: 半角文字5桁
              .append(",")
              .append(formatNumberField(fields[18], 12))   // 数量: 半角数字12桁
              .append(",")
              .append(formatNumberField(fields[19], 12))   // 請負費: 半角数字12桁
              .append("\n");
        }
        fileIo.writeFileString(sb.toString());
    } finally {
        fileIo.closeFile();
    }

    // ファイルを下り電文に設定
    setDownloadFile(new FileInputStream(csvFilePath));

    if (log.isDebugEnabled()) {
        log.debug("buppinCsvSakusei() - end");
    }
}

/**
 * <p>[概 要] 請負費ＣＳＶ作成</p>
 * <p>[詳 細] 請負費CSVデータを作成し、CSVファイルとして返却する</p>
 * @throws SystemException システムエラー発生
 * @throws BusinessException 業務例外発生
 */
public final void ukeoiCsvSakusei() throws BusinessException, SystemException {
    if (log.isDebugEnabled()) {
        log.debug("ukeoiCsvSakusei() - start");
    }

    // 記載工程細分別エンティティ生成
    final N5Skiksksib02Entity entityKskSib = (N5Skiksksib02Entity) getEntity(N5Skiksksib02Entity.class);

    // CSVファイル名を生成
    String csvFileName = this.getCenterCode() + "P316030005" + this.getUserID() + DateUtil.getDate("hhmmss") + ".csv";
    String csvFilePath = SystemUtil.getSystemInfo("print.data.path") + csvFileName;

    // 請負費CSVデータを検索
    List listUoiCsv = entityKskSib.search(getRequestData(D_SKS_CD), getRequestData(D_SKJBAN));

    if (listUoiCsv.size() == 0) {
        throw new BusinessException(new Message("NNCW0007"),
            "UkewatashisyoSakuseiLogic#ukeoiCsvSakusei()");
    }

    // CSVファイル作成
    FileIoUtil fileIo = new FileIoUtil(csvFilePath, FileIoUtil.WRITE_STRING, FileIoUtil.WINDOWS_31J);
    try {
        StringBuilder sb = new StringBuilder();
        
        // データ行の出力
        for (Object obj : listUoiCsv) {
            Object[] fields = (Object[]) obj;
            sb.append(formatNumberField(fields[0], 8))     // 総合工事番号: 半角数字8桁
              .append(",")
              .append(formatTextField(fields[1], 23))      // 工事計画番号: 半角文字23桁 
              .append(",")
              .append(formatNumberField(fields[2], 2))     // 増減科目: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[3], 10))    // ビル・収容区域コード: 半角数字10桁
              .append(",")
              .append(formatNumberField(fields[4], 7))     // 共通アイテム: 半角数字7桁
              .append(",")
              .append(formatNumberField(fields[5], 2))     // 管理区分: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[6], 3))     // 設備: 半角数字3桁
              .append(",")
              .append(formatNumberField(fields[7], 2))     // 種目: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[8], 2))     // 細目: 半角数字2桁
              .append(",")
              .append(formatNumberField(fields[9], 2))     // 細分: 半角数字2桁
              .append(",")
              .append(formatTextField(fields[10], 50))     // 細分名: 全角文字50桁
              .append(",")
              .append(formatTextField(fields[11], 5))      // 保管課コード: 半角英数字5桁
              .append(",")
              .append(formatTextField(fields[12], 7))      // 開始年月: 半角文字7桁
              .append(",")
              .append(formatNumberField(fields[13], 12))   // 受渡数量: 半角数字12桁
              .append(",")
              .append(formatNumberField(fields[14], 1))    // 工程種別コード: 半角数字1桁
              .append(",")
              .append(formatNumberField(fields[15], 6))    // 記載工程コード: 半角数字6桁
              .append(",")
              .append(formatTextField(fields[16], 8))      // 記載工程名: 全角文字8桁
              .append(",")
              .append(formatTextField(fields[17], 5))      // 単位: 半角文字5桁
              .append(",")
              .append(formatNumberField(fields[18], 12))   // 数量: 半角数字12桁
              .append(",")
              .append(formatNumberField(fields[19], 12))   // 請負費: 半角数字12桁
              .append("\n");
        }
        fileIo.writeFileString(sb.toString());
    } finally {
        fileIo.closeFile();
    }

    // ファイルを下り電文に設定
    setDownloadFile(new FileInputStream(csvFilePath));

    if (log.isDebugEnabled()) {
        log.debug("ukeoiCsvSakusei() - end");
    }
}

/**
 * 数値項目のフォーマット
 * @param value 値
 * @param length 桁数
 * @return フォーマット済み文字列
 */
private String formatNumberField(Object value, int length) {
    if (value == null) {
        return StringUtils.repeat("0", length);
    }
    String strVal = value.toString().trim();
    // 数値以外の文字を除去
    strVal = strVal.replaceAll("[^0-9]", "");
    // 指定桁数に満たない場合は0埋め
    return StringUtils.leftPad(strVal, length, '0');
}

/**
 * 文字項目のフォーマット
 * @param value 値
 * @param length 桁数
 * @return フォーマット済み文字列
 */
private String formatTextField(Object value, int length) {
    if (value == null) {
        return StringUtils.repeat(" ", length);
    }
    String strVal = value.toString().trim();
    // 指定桁数でカット
    if (strVal.length() > length) {
        return strVal.substring(0, length);
    }
    // 指定桁数に満たない場合は半角スペース埋め
    return StringUtils.rightPad(strVal, length, ' ');
}
